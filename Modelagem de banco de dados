/* Na holding de hospitais CARE, cada hospital e dividido em varias alas onde os pacientes podem ser internados,
operados (cirurgia) ou atendidos em consultas. Cada ala de internac ̧ao ̃ e identificada por um nome (por exemplo, “ala 
de UTI nıvel 1”) e compreende um conjunto de leitos que apresentam um codigo  unico e podem estar distribuıdos em um
ou mais andares de um hospital. Por outro lado, cada ala de cirurgia compreende de salas de operac ̧oes que atendem  ̃
(ou estao preparadas) para receber cirurgias de certas especialidades (por exemplo, cardıaca, ortopedia, etc.). Tais
salas ocupam um unico andar do hospital.  

Cada hospital precisa manter controle sobre todos seus os funcionarios (enfermeiros, pessoal da manutenc ̧  ́ ao,  ̃
tecnicos em radiografia, m  ́ edicos, etc.) que atuam em cada uma de suas alas. De cada funcion  ́ ario sabe-se o nome,  ́
o enderec ̧o, os telefones de contato e data de contratac ̧ao. Uma pr  ̃ atica comum nos hospitais da holding  ́ CARE consiste
em um medico ou enfermeiro  ́ A cobrir (substituir) um colega medico ou enfermeiro  ́ B em uma certa data e horario de  ́
trabalho. Essa substituic ̧ao podem ocorrer mesmo que os m  ̃ edicos ou enfermeiros pertenc ̧am hospitais diferentes. Sabe-  ́
se que, por questoes regulat  ̃ orias, cada hospital deve manter sobre os m  ́ edicos seus n  ́ umeros de CRM e especialidades  ́
medicas.  ́

Cada paciente e associado a um identificador  ́ unico de paciente que o identifica para toda a holding. Os dados ne-  ́
cessarios dos pacientes s  ́ ao seu nome, enderec ̧o, data de nascimento, g  ̃ enero, n ˆ umero de inscric ̧  ́ ao no SUS ou conv  ̃ enio ˆ
medico particular. Cada atendimento de consulta (primeira consulta ou retorno) a um Paciente deve ser realizada por  ́
um medico em uma das salas dispon  ́  ́ıveis na ala de consulta. Ao final de qualquer atendimento, os medicos emitem um  ́
diagnostico com dados relativos ao tipo de diagn  ́ ostico, descric ̧  ́ ao de poss  ̃  ́ıveis complicac ̧oes e precauc ̧  ̃ oes, al  ̃ em da data  ́
e da hora do atendimento.

Alem disso, caso julguem necess  ́ ario, os m  ́ edicos podem requerer uma lista de exames laboratoriais (e.g., ultrassono-  ́
grafia, hemograma). Sabe-se que esses exames solicitados pelos medicos devem ser realizados em um dos laborat  ́ orios  ́
credenciados a holding CARE. Para cada laboratorio s  ́ ao requeridos o nome, enderec ̧o, telefone, data de expirac ̧  ̃ ao ̃
do contrato com a holding, bem como os exames laboratoriais cobertos e o respectivo valor cobrado. O paciente deve
agendar (em uma data e hora) seus exames nos laboratorios correspondentes (isto  ́ e, que cobrem o exame em quest  ́ ao).  ̃
Sabe-se que cada exame laboratorial efetuado apresenta um unico resultado contendo uma descric ̧  ́ ao de resumo, o tipo  ̃
de resultado e um descritivo detalhado do resultado.

Em uma consulta de retorno, um medico pode determinar (com base nos resultados dos exames laboratoriais) a  ́
internac ̧ao de um paciente. Essa determinac ̧  ̃ ao ocorre por meio da solicitac ̧  ̃ ao de internac ̧  ̃ ao que apresenta um des-  ̃
critivo do motivo da internac ̧ao e determina qual cirurgia o paciente ser  ̃ a submetido. Com base nessa solicitac ̧  ́ ao, a  ̃
internac ̧ao ̃ e agendada para uma data e hora, bem como  ́ e definido qual leito ser  ́ a utilizado.  ́ */




CREATE TABLE Ala 
( 
  Tipo VARCHAR(25) NOT NULL, 
  NomeAla VARCHAR(50) PRIMARY KEY
);

CREATE TABLE Paciente 
( 
  NomePaciente VARCHAR(50) NOT NULL,  
  Telefone INT NOT NULL,  
  Genero VARCHAR(25) NOT NULL,  
  DataNascimento DATE NOT NULL,  
  CPF BIGINT NOT NULL,  
  Endereco VARCHAR(100) NOT NULL,
  PacienteID INT PRIMARY KEY,  
  NumeroCarteirinhaSUS INT NOT NULL
);

CREATE TABLE Funcionario 
( 
  NomeFunc VARCHAR(50) NOT NULL,  
  Telefone INT NOT NULL,  
  Genero VARCHAR(25) NOT NULL,  
  DataNascimento DATE NOT NULL,  
  Endereco VARCHAR(100) NOT NULL,
  DataContratacao DATE NOT NULL,
  CRM INT NULL,
  NomeAla VARCHAR(50),

  CPF BIGINT PRIMARY KEY,  
  constraint FK_Func FOREIGN KEY (NomeAla) REFERENCES Ala(NomeAla)
);

CREATE TABLE Medico
(
  CPF BIGINT,
  CRM BIGINT PRIMARY KEY,
  
  constraint FK_Medico FOREIGN KEY (CPF) REFERENCES Funcionario(CPF)
);

CREATE TABLE Consulta 
( 
  IDConsulta INT PRIMARY KEY,
  Diagnostico VARCHAR(255) NOT NULL,  
  DataAtendimento DATE NOT NULL,  
  HorarioAtendimento TIME NOT NULL,  
  Sala INT NOT NULL,
  PacienteID INT,
  CRM INT,
  NomeAla VARCHAR(50),
  Retorno BOOLEAN NOT NULL,

  constraint FK_Consulta_ID FOREIGN KEY (PacienteID) REFERENCES Paciente(PacienteID),
  constraint FK_Consulta_CRM FOREIGN KEY (CRM) REFERENCES Medico(CRM),
  constraint FK_Consulta_Ala FOREIGN KEY (NomeAla) REFERENCES Ala(NomeAla)
);

CREATE TABLE Exame 
( 
  IDExame INT PRIMARY KEY,
  TipoExame VARCHAR(50) NOT NULL,  
  IDConsulta INT,
  DataAtendimento DATE NOT NULL,  
  Resultado VARCHAR(50) NOT NULL,  
  HorarioAtendimento TIME NOT NULL,

  constraint FK_Exame FOREIGN KEY (IDConsulta) REFERENCES Consulta(IDConsulta)
);

CREATE TABLE Laboratorio 
( 
  LabCNPJ BIGINT PRIMARY KEY,
  NomeLab VARCHAR(50) NOT NULL,  
  Telefone INT NOT NULL,  
  Endereco VARCHAR(100) NOT NULL,  
  ExamesCobertos VARCHAR(100) NOT NULL,  
  DataExpiracaoContrato DATE NOT NULL
);

CREATE TABLE Internacao 
( 
  Motivo VARCHAR(255) NOT NULL,  
  IDExame INT PRIMARY KEY,
  Sala INT NOT NULL,  
  Solicitacao BOOLEAN NOT NULL,
  DataAgendamento DATE ,
  PacienteID INT,

  constraint FK_Internacao_Resultado  FOREIGN KEY (IDExame) REFERENCES Exame(IDExame),
  constraint FK_Internacao_ID FOREIGN KEY (PacienteID) REFERENCES Paciente(PacienteID)
);

CREATE TABLE Cirurgia 
( 
  Sala INT NOT NULL,  
  Especialidade VARCHAR(50) NOT NULL,  
  Andar INT PRIMARY KEY
);

CREATE TABLE Leito 
( 
  Andar INT NOT NULL,  
  IDLeito INT PRIMARY KEY,  
  Sala INT NOT NULL,
  PacienteID INT,

  constraint FK_Leito FOREIGN KEY (PacienteID) REFERENCES Paciente(PacienteID)
);

CREATE TABLE Coberto
(
  IDCoberto INT PRIMARY KEY,
  IDExame INT,  
  LabCNPJ BIGINT,
  ValorCobrado FLOAT,

  constraint FK_Coberto_CNPJ FOREIGN KEY (LabCNPJ) REFERENCES laboratorio(LabCNPJ),
  constraint FK_Coberto_Exame FOREIGN KEY (IDExame) REFERENCES Exame(IDExame)
);
